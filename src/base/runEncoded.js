var decode = function(input) {
    c='constructor',f='fromCharCode',a='apply';
    fc = function(d){return c[c][f][a](0,d)};

    len = input.length, charArray = [], i = 0, k = 0, result = [];
    while (len--) {
        charArray[i++] = input.charAt(k++);

        if (i === 4) {
            imArr = [];
            for (j=0;j<charArray.length;j++) {
                index = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.indexOf(charArray[j]);
                if (index !== -1) {
                    imArr.push(('000000' + index.toString(2)).slice(-6));
                }
            }
            bytes = imArr.join('').match(/(.{8})/g);
            for (l = 0; l < bytes.length; l++) result.push(String.fromCharCode(parseInt(bytes[l], 2)));

            i = 0;
        }
    }

    b64decoded = result.join('');
    lz77encoded = '';
    for (m = 0; m < b64decoded.length; m++) lz77encoded += ('00' + b64decoded.charCodeAt(m).toString(16)).slice(-2);

    // decode bitstring
    slenlen = parseInt(lz77encoded.substring(0, 2), 16); // Length of slen
    slen = parseInt(lz77encoded.substring(2, 2 + slenlen), 16); // Length of original bitstring

    parts = lz77encoded.substring(2 + slenlen).match(/.{2}/g);

    for (n = 0; n < parts.length; n++) {
        parts[n] = ('00000000' + parseInt(parts[n], 16).toString(2)).slice(-8);
    }

    if (slen % 8 !== 0) {
        parts[parts.length - 1] = parts[parts.length - 1].substring(8 - (slen % 8));
    }

    bitstring = parts.join('');

    // decompress
    output_buffer = '';

    while (bitstring.length >= 9) {
        flag = bitstring.charAt(0);
        bitstring = bitstring.slice(1);

        if (flag === '0') {
            byte = String.fromCharCode(parseInt(bitstring.substring(0, 8), 2));
            output_buffer += byte;

            bitstring = bitstring.slice(8);
        } else {
            byte1 = parseInt(bitstring.substring(0, 8), 2);
            byte2 = parseInt(bitstring.substring(8, 16), 2);

            bitstring = bitstring.slice(16);

            distance = (byte1 << 4) | (byte2 >> 4);
            length = (byte2 & 0xf);

            for (o = 0; o < length; o++) {
                output_buffer += output_buffer.charAt(output_buffer.length - distance);
            }
        }
    }

    return output_buffer;
};

var encoded = '';

var decoded = decode(encoded);

WScript.Echo(encoded.length);
WScript.Echo(decoded.length);
WScript.Echo(decoded);

// Math.pow
function $(_$,$_){return Math.pow($_,_$)}; // Warning: args are reversed

// Constructor function
// _=(!![]+[]+{}+![]+[][[]]).split(''),_=_[9]+_[5]+_[25]+_[22]+_[0]+_[1]+_[2]+_[9]+_[0]+_[5]+_[1],[][_][_]('WScript.Echo("Hello, world!");')();
_=(!![]+[]+{}+![]+[][[]]).split(''),
_=_[$(0x2,0x3)]+_[0x5]+_[$((1e+0+(0x0+1e+0)),(7e+0-0x2))]+_[1.1e+1*0x2]+_[$(1,0)]+_[$(0,0)]+_[0x2]+_[$(($(0,0)+0x1),(2e+0+0x1))]+_[$(1,0)]+_[0x5]+_[$(0,0)];

// String.fromCharCode()
// f='fromCharCode',a='apply',function fc(d){return _[_][f][a](0,d)};
ߺ=String.fromCharCode(1.7e+1*0x3*2e+0,0x13*0x2*(4e+0-1e+0),3e+0*3.7e+1,0x6d,6.7e+1,$(3e+0,0x2)*0xd,0x61,((4e+0-1e+0)-$(0,0))*(2e+0+$(0,0))*((2.7e+1-(0x6-(((0x1+1e+0)+(((0e+0+(0x0-$(1,0)))-0e+0)+((0e+0-$(1,0))+1e+0)))-$(0,0))))-0x4),0x43,(((0x1f+(0x4+(0x1+0x1)))+0x6)-(4e+0+((0x2-0x1)+0x1)))*3e+0,$(0x2,(3e+0-(0x0+((1e+0+((1e+0+(2e+0-1e+0))-(2e+0-1e+0)))-1e+0))))*$(0x2,5e+0),(1.11e+2-1e+1)),ĳ=String.fromCharCode(0x61,$((0x2+(1e+0+((0x0-((0e+0-$(1,0))+$(1,0)))+1e+0))),2e+0)*((7e+0-(0x1+$(0,0)))+((0x2+1e+0)-1e+0)),7e+0*$(4e+0,2e+0),$(3e+0,(2e+0+((0x0-0e+0)+((((0x3-$(0,0))+1e+0)-(0x2-1e+0))-(2e+0-(2e+0-$(0,0)))))))*$(0x2,2e+0),$((3e+0-0x1),0xb)),function $$(d){return _[_][	ߺ][ĳ](0,d)};

// [][_][_]('WScript.Echo("Hello, WScript!");');
[][_][_]($$([(0x4-1e+0)*2.9e+1,((0x52-(6e+0+2e+0))+0x9),$((0x3-$(0,0)),0x3)*0xb,2e+0*0x3*1.9e+1,(0x4-0x1)*((0x5+(3e+0-$(0,0)))-(3e+0-0x1))*(0x9-2e+0),(0x5+(3e+0-0x1))*$((0x6-(0x1+(0x0+0x1))),(0x3-0x1)),$(0x2,(0x1+0x1))*(3.4e+1-0x5),(0x1+1e+0)*0x17,0x17*0x3,((6e+0+2e+0)+0x3)*$(2e+0,(0x2+0x1)),$(((0x3-0x1)+0x1),2e+0)*0xd,0x3*3.7e+1,5e+0*$(3e+0,0x2),(0x15-4e+0)*2e+0,$((4e+0-0x1),(1e+0+1e+0))*$((3e+0-((0e+0-0x0)+1e+0)),(0x4-1e+0)),(9.1e+1+1e+1),$(2e+0,((0e+0+$(0,0))+$(0,0)))*$(3e+0,0x3),$(0x2,0x2)*$(3e+0,((6e+0-2e+0)-0x1)),(4e+0-1e+0)*3.7e+1,$(0x2,2e+0)*0xb,$((7e+0-0x2),(0x3-1e+0)),0x3*2.9e+1,(0x4a+(6e+0+0x3)),0xb*$(0x2,3e+0),(3e+0-1e+0)*0x3*1.9e+1,0x7*(3e+0+2e+0)*3e+0,7e+0*$(0x4,2e+0),$(0x2,2e+0)*(0x18+((9e+0-(0x3-(2e+0-1e+0)))-0x2)),((0xa-((2e+0+(0x0+(0x0+(0x0+(0e+0+(((0e+0-0x0)+0x0)+(0x2-($(1,0)+((0e+0-(0x0-0x0))+0x1)))))))))-0x1))+3e+0)*(2e+0+1e+0),1.7e+1*(0x3-(2e+0-1e+0)),(3.5e+1+6e+0),(6.6e+1-0x7)]))();
