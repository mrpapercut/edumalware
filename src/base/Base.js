function Base() {
    if (!this.isWScript()) {
        throw Error('Not WScript');
    } else if (!this.isElevated()) {
        this.relaunchAsElevated();
        throw Error('Not elevated');
    }
};

Base.prototype.isWScript = function() {
    return typeof WScript !== 'undefined' && typeof window === 'undefined' && typeof document === 'undefined';
};

Base.prototype.isElevated = function() {
    var isElevated = true;

    try {
        var wsh = WScript.CreateObject('WScript.Shell');
        wsh.RegRead('HKEY_USERS\\S-1-5-19\\Environment\\TEMP');
    } catch (e) {
        isElevated = false;
    }

    return isElevated;
};

Base.prototype.relaunchAsElevated = function() {
    var uac = WScript.CreateObject('Shell.Application');
    uac.shellExecute(WScript.FullName, WScript.ScriptFullName, '', 'runas', 1);
};

Base.prototype.getOwnProcess = function() {
    var ownScriptName = WScript.ScriptFullName.replace(/\\/g, '\\\\');
    var ownProcQuery = 'SELECT * FROM Win32_Process Where CommandLine LIKE "%' + ownScriptName + '"';
    var processes = [];

    var colProc = new Enumerator(this.queryWMI(ownProcQuery));
    for (;!colProc.atEnd();colProc.moveNext()) {
        var procItem = colProc.item();

        var ownerProps = procItem.ExecMethod_('GetOwner');
        var ownerSid = procItem.ExecMethod_('GetOwnerSid');

        WScript.echo(ownerProps.Domain);
        WScript.Echo(ownerSid.Sid);

        /*
        procItem.Domain = ownerProps.Domain;
        procItem.User = ownerProps.User;
        procItem.Sid = ownerSid.Sid;
        */

        processes.push(procItem);
    }

    WScript.Echo(processes.length);

    return processes;
};

Base.prototype.queryWMI = function(wmiQuery) {
    var objWMIService = GetObject("winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2");
    return objWMIService.ExecQuery(wmiQuery, null, 48);
};

Base.prototype._debugWmiProps = function(colObj) {
    if (typeof colObj['Properties_'] === 'undefined') {
        return false;
    } else {
        var props = new Enumerator(colObj.properties_);
        for (;!props.atEnd(); props.moveNext()) {
            WScript.Echo(props.item().name + ': ' + props.item().value);
        }
    }
};

//////
try {
    var b = new Base();
    b.getOwnProcess();
    WScript.Sleep(10000);
} catch (e) {
    for (var i in e) WScript.Echo(i + ': ' + e[i]);
    WScript.Sleep(10000);
}
